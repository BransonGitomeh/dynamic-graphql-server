{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap af44ae0ae9cfc5f7f28a","webpack:///external \"mongodb\"","webpack:///./src/index.js","webpack:///external \"express\"","webpack:///external \"express-graphql\"","webpack:///external \"graphql\"","webpack:///external \"request\""],"names":["require","install","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","decorate","prop","finalRes","spaceToSnake","Type","list","required","decorate_input","basicTypes","indexOf","string","replace","checkIfPropRequireList","makeSchema","Promise","res","rej","request","post","url","form","query","err","result","console","log","data","JSON","parse","body","queries","Types","map","type","description","toString","join","propContaining","Props","mutations","buildSchema","express","app","graphqlHTTP","_require","graphql","MongoClient","ObjectId","connect","db","schema","rootValue","hello","_ref","_id","col","collection","findOne","find","Parent","toArray","forEach","item","addType","args","insertOne","addProp","use","static","graphiql","req","next","then","port","process","env","PORT","listen"],"mappings":"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","file":"index.js","sourcesContent":["require(\"source-map-support\").install();\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"mongodb\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar express = __webpack_require__(2);\nvar app = new express();\nvar graphqlHTTP = __webpack_require__(3);\n\nvar _require = __webpack_require__(4),\n    graphql = _require.graphql,\n    buildSchema = _require.buildSchema;\n\nvar MongoClient = __webpack_require__(0).MongoClient;\nvar ObjectId = __webpack_require__(0).ObjectId;\nvar url = 'mongodb://localhost:27017/coola';\nvar prodUrl = 'mongodb://branson:a323573770@ds141082.mlab.com:41082/coola';\nvar request = __webpack_require__(5);\n\nif (true) {\n    url = prodUrl;\n}\n\nMongoClient.connect(url, function (err, db) {\n    if (err) {\n        console.log(err);\n        console.log(\"could not connet to the database\");\n    } else {\n        console.log(\"database connected succesfully\");\n    }\n    var schema = buildSchema('\\n          type Query {\\n            hello: String,\\n            Type(_id: String):Type,\\n            Types:[Type],\\n            Prop:Prop,\\n            Props:[Prop],\\n            Relationship:Relationship,\\n            Relationships:[Relationship]\\n          }\\n\\n          type Mutation {\\n           addType(\\n            name: String,\\n            description:String,\\n           ): String,\\n           addProp(\\n             name: String,\\n             list: Boolean,\\n             Parent:String,\\n             Type:String,\\n             required:Boolean,\\n             description:String,\\n           ): String,\\n           relate(origin: String,target: String): String\\n          }\\n\\n          type Type {\\n            _id: String,\\n            name: String,\\n            description : String,\\n            Props:[Prop]\\n          }\\n\\n          type Prop {\\n            _id: String,\\n            Parent:Type,\\n            list: Boolean,\\n            required:Boolean,\\n            description:String,\\n            name: String,\\n            Type:String\\n          }\\n\\n          type Relationship {\\n            _id: String,\\n            origin: Type,\\n            target: Type,\\n          }\\n        ');\n\n    var types = [];\n\n    var rootValue = {\n        hello: function hello() {\n            return 'Hello world!';\n        },\n        Type: function Type(_ref) {\n            var _id = _ref._id;\n            return new Promise(function (res, rej) {\n                var col = db.collection(\"Types\");\n                console.log(_id);\n                col.findOne({ _id: new ObjectId(_id) }, function (err, data) {\n                    !data ? \"\" : data.Props = function () {\n                        return new Promise(function (res, rej) {\n                            var col = db.collection(\"Props\");\n                            col.find({ Parent: new ObjectId(data._id) }).toArray(function (err, data) {\n                                res(data);\n                            });\n                        });\n                    };\n                    console.log(data);\n                    res(data);\n                });\n            });\n        },\n        Types: function Types() {\n            return new Promise(function (res, rej) {\n                var col = db.collection(\"Types\");\n                col.find().toArray(function (err, data) {\n                    data.forEach(function (item) {\n                        item.Props = function () {\n                            return new Promise(function (res, rej) {\n                                var col = db.collection(\"Props\");\n                                col.find({ Parent: new ObjectId(item._id) }).toArray(function (err, data) {\n                                    res(data);\n                                });\n                            });\n                        };\n                    });\n                    res(data);\n                });\n            });\n        },\n        addType: function addType(args) {\n            return new Promise(function (res, rej) {\n                var col = db.collection(\"Types\");\n                col.insertOne(args, function (err, data) {\n                    res(data);\n                });\n            });\n        },\n        addProp: function addProp(args) {\n            return new Promise(function (res, rej) {\n                var col = db.collection(\"Props\");\n                args.Parent = new ObjectId(args.Parent);\n                col.insertOne(args, function (err, data) {\n                    res(data);\n                });\n            });\n        }\n    };\n\n    app.use(express.static('./www'));\n\n    app.use('/graphql', graphqlHTTP({\n        schema: schema,\n        rootValue: rootValue,\n        graphiql: true\n    }));\n\n    app.use('/graphql2', function (req, res, next) {\n        makeSchema().then(function (schema) {\n            req.schema = schema;\n            next();\n        });\n    }, function (req, res, next) {\n        var middleware = graphqlHTTP({\n            schema: req.schema,\n            rootValue: rootValue,\n            graphiql: true\n        });\n\n        middleware(req, res, next);\n    });\n\n    var port = process.env.PORT || 3000;\n\n    app.listen(port, function () {\n        return console.log('Started listening at ' + port, url);\n    });\n});\n\nfunction decorate(prop) {\n    var finalRes = spaceToSnake(prop.Type);\n\n    if (prop.Type) if (prop.list == true) {\n        finalRes = '[' + finalRes + ']';\n    }\n\n    if (prop.required == true) {\n        finalRes = finalRes + '!';\n    }\n\n    return finalRes;\n}\n\nfunction decorate_input(prop) {\n    var basicTypes = ['Int', 'String', 'Boolean', 'Float'];\n\n    var finalRes = spaceToSnake(prop.Type);\n\n    if (basicTypes.indexOf(finalRes) == -1) {\n        finalRes = \"input_\" + spaceToSnake(prop.Type);\n    }\n\n    if (prop.list == true) {\n        finalRes = '[' + finalRes + ']';\n    }\n\n    if (prop.required == true) {\n        finalRes = finalRes + '!';\n    }\n\n    return finalRes;\n}\n\nfunction spaceToSnake(string) {\n    return string.replace(/ /g, \"_\");\n}\n\nfunction checkIfPropRequireList(prop) {\n    var finalRes = spaceToSnake(prop.name);\n\n    if (prop.list == true) {\n        finalRes = finalRes + '(first:Int,after:String,offSet:Int)';\n    }\n\n    return finalRes;\n}\n\nfunction makeSchema() {\n    return new Promise(function (res, rej) {\n        request.post({\n            url: \"http://localhost:3000/graphql\",\n            form: {\n                query: 'query te{\\n                          Types {\\n                            _id\\n                            name,\\n                            description,\\n                            Props{\\n                              _id,\\n                              name,\\n                              required,\\n                              description,\\n                              list,\\n                              Type\\n                            }\\n                          }\\n                        }'\n            }\n        }, function (err, result) {\n            console.log(err);\n            var data = JSON.parse(result.body).data;\n\n            console.log(data);\n            var queries = '\\n              type Query {\\n                ' + data.Types.map(function (type) {\n                return '\\n# ' + type.description + ' \\n \\n                  ' + spaceToSnake(type.name.toString()) + '(_id:String) : ' + spaceToSnake(type.name.toString());\n            }).join(\" \") + '\\n                ' + data.Types.map(function (type) {\n                return '\\n# list of ' + type.description + ' \\n \\n                  ' + spaceToSnake(type.name.toString()) + 's : [' + spaceToSnake(type.name.toString()) + ']';\n            }).join(\" \") + '\\n              }\\n\\n              ' + data.Types.map(function (propContaining) {\n                return '\\n# ' + propContaining.description + '\\n type ' + spaceToSnake(propContaining.name) + ' {\\n                ' + propContaining.Props.map(function (prop) {\n                    return '\\n# ' + prop.description + ' \\n \\n                  ' + checkIfPropRequireList(prop) + ': ' + decorate(prop);\n                }).join(\" \") + '\\n              }';\n            }).join(\" \") + '\\n            ';\n            var mutations = '\\n              type Mutation {\\n                ' + data.Types.map(function (type) {\n                return '\\n# ' + type.description + ' \\n\\n                  ' + spaceToSnake(type.name.toString()) + 'Mutations : ' + spaceToSnake(type.name.toString()) + 'Mutations';\n            }).join(\" \") + '\\n              }\\n\\n              ' + data.Types.map(function (type) {\n                return 'type ' + type.name + 'Mutations {\\n                      Create(\\n                          ' + type.name + ':input_' + type.name + '\\n                      ): ' + type.name + ',\\n\\n                      Update(\\n                          ' + type.name + ':input_' + type.name + '\\n                      ): ' + type.name + ',\\n\\n                      Delete(\\n                          ' + type.name + ':input_' + type.name + '\\n                      ): ' + type.name + '\\n                  }';\n            }) + '\\n              \\n\\n              ' + data.Types.map(function (propContaining) {\n                return '\\n# ' + propContaining.description + '\\n input input_' + spaceToSnake(propContaining.name) + ' {\\n                ' + propContaining.Props.map(function (prop) {\n                    return '\\n# ' + prop.description + ' \\n ' + spaceToSnake(prop.name) + ': ' + decorate_input(prop);\n                }).join(\" \") + '\\n              }';\n            }).join(\" \") + '\\n            ';\n\n            res(buildSchema(queries + mutations));\n        });\n    });\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express-graphql\");\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"graphql\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"request\");\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af44ae0ae9cfc5f7f28a","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 0\n// module chunks = 0","const express = require('express');\nconst app = new express();\nconst graphqlHTTP = require('express-graphql');\nlet { graphql, buildSchema } = require('graphql');\nlet MongoClient = require('mongodb').MongoClient\nlet ObjectId = require('mongodb').ObjectId\nlet url = 'mongodb://localhost:27017/coola';\nlet prodUrl = 'mongodb://branson:a323573770@ds141082.mlab.com:41082/coola'\nconst request = require('request')\n\nif (process.env.NODE_ENV == 'production') {\n    url = prodUrl\n}\n\nMongoClient.connect(url, function (err, db) {\n    if (err) {\n        console.log(err)\n        console.log(\"could not connet to the database\")\n    } else {\n        console.log(\"database connected succesfully\")\n    }\n    var schema = buildSchema(`\n          type Query {\n            hello: String,\n            Type(_id: String):Type,\n            Types:[Type],\n            Prop:Prop,\n            Props:[Prop],\n            Relationship:Relationship,\n            Relationships:[Relationship]\n          }\n\n          type Mutation {\n           addType(\n            name: String,\n            description:String,\n           ): String,\n           addProp(\n             name: String,\n             list: Boolean,\n             Parent:String,\n             Type:String,\n             required:Boolean,\n             description:String,\n           ): String,\n           relate(origin: String,target: String): String\n          }\n\n          type Type {\n            _id: String,\n            name: String,\n            description : String,\n            Props:[Prop]\n          }\n\n          type Prop {\n            _id: String,\n            Parent:Type,\n            list: Boolean,\n            required:Boolean,\n            description:String,\n            name: String,\n            Type:String\n          }\n\n          type Relationship {\n            _id: String,\n            origin: Type,\n            target: Type,\n          }\n        `);\n\n    const types = []\n\n    var rootValue = {\n        hello: () => 'Hello world!',\n        Type: ({ _id }) => new Promise((res, rej) => {\n            const col = db.collection(\"Types\")\n            console.log(_id)\n            col.findOne({ _id: new ObjectId(_id) }, (err, data) => {\n                !data ? \"\" : data.Props = () => new Promise((res, rej) => {\n                    const col = db.collection(\"Props\")\n                    col.find({ Parent: new ObjectId(data._id) }).toArray((err, data) => {\n                        res(data)\n                    })\n                })\n                console.log(data)\n                res(data)\n            })\n        }),\n        Types: () => new Promise((res, rej) => {\n            const col = db.collection(\"Types\")\n            col.find().toArray((err, data) => {\n                data.forEach(item => {\n                    item.Props = () => new Promise((res, rej) => {\n                        const col = db.collection(\"Props\")\n                        col.find({ Parent: new ObjectId(item._id) }).toArray((err, data) => {\n                            res(data)\n                        })\n                    })\n                })\n                res(data)\n            })\n        }),\n        addType: (args) => new Promise((res, rej) => {\n            const col = db.collection(\"Types\")\n            col.insertOne(args, (err, data) => {\n                res(data)\n            })\n        }),\n        addProp: (args) => new Promise((res, rej) => {\n            const col = db.collection(\"Props\")\n            args.Parent = new ObjectId(args.Parent)\n            col.insertOne(args, (err, data) => {\n                res(data)\n            })\n        }),\n    };\n\n    app.use(express.static('./www'));\n\n    app.use('/graphql', graphqlHTTP({\n        schema,\n        rootValue,\n        graphiql: true\n    }));\n\n    app.use('/graphql2', (req, res, next) => {\n        makeSchema().then(schema => {\n            req.schema = schema\n            next()\n        })\n    }, (req, res, next) => {\n        const middleware = graphqlHTTP({\n            schema: req.schema,\n            rootValue,\n            graphiql: true\n        })\n\n        middleware(req, res, next)\n    });\n\n    const port = process.env.PORT || 3000\n\n    app.listen(port, () => console.log(`Started listening at ${port}`, url));\n});\n\nfunction decorate(prop) {\n    let finalRes = spaceToSnake(prop.Type)\n\n    if (prop.Type)\n\n        if (prop.list == true) {\n            finalRes = `[${finalRes}]`\n        }\n\n    if (prop.required == true) {\n        finalRes = `${finalRes}!`\n    }\n\n    return finalRes\n}\n\nfunction decorate_input(prop) {\n    const basicTypes = ['Int', 'String', 'Boolean', 'Float']\n\n    let finalRes = spaceToSnake(prop.Type)\n\n    if (basicTypes.indexOf(finalRes) == -1) {\n        finalRes = \"input_\" + spaceToSnake(prop.Type)\n    }\n\n    if (prop.list == true) {\n        finalRes = `[${finalRes}]`\n    }\n\n    if (prop.required == true) {\n        finalRes = `${finalRes}!`\n    }\n\n    return finalRes\n}\n\nfunction spaceToSnake(string) {\n    return string.replace(/ /g, \"_\")\n}\n\nfunction checkIfPropRequireList(prop) {\n    let finalRes = spaceToSnake(prop.name)\n\n    if (prop.list == true) {\n        finalRes = `${finalRes}(first:Int,after:String,offSet:Int)`\n    }\n\n    return finalRes\n}\n\nfunction makeSchema() {\n    return new Promise((res, rej) => {\n                request.post({\n                            url: \"http://localhost:3000/graphql\",\n                            form: {\n                                query: `query te{\n                          Types {\n                            _id\n                            name,\n                            description,\n                            Props{\n                              _id,\n                              name,\n                              required,\n                              description,\n                              list,\n                              Type\n                            }\n                          }\n                        }`\n                            }\n                        }, (err, result) => {\n                            console.log(err)\n                            const data = JSON.parse(result.body).data\n\n                            console.log(data)\n                            const queries = `\n              type Query {\n                ${data.Types.map(type=>`\\n# ${type.description} \\n \n                  ${spaceToSnake(type.name.toString())}(_id:String) : ${spaceToSnake(type.name.toString())}`)\n                .join(\" \")}\n                ${data.Types.map(type=>`\\n# list of ${type.description} \\n \n                  ${spaceToSnake(type.name.toString())}s : [${spaceToSnake(type.name.toString())}]`)\n                .join(\" \")}\n              }\n\n              ${data.Types.map(propContaining=>`\\n# ${propContaining.description}\\n type ${spaceToSnake(propContaining.name)} {\n                ${propContaining.Props.map(prop=>`\\n# ${prop.description} \\n \n                  ${checkIfPropRequireList(prop)}: ${decorate(prop)}`)\n                .join(\" \")}\n              }`).join(\" \")}\n            `\n            const mutations = `\n              type Mutation {\n                ${data.Types.map(type=>`\\n# ${type.description} \\n\n                  ${spaceToSnake(type.name.toString())}Mutations : ${spaceToSnake(type.name.toString())}Mutations`)\n                .join(\" \")}\n              }\n\n              ${data.Types.map(type=>`type ${type.name}Mutations {\n                      Create(\n                          ${type.name}:input_${type.name}\n                      ): ${type.name},\n\n                      Update(\n                          ${type.name}:input_${type.name}\n                      ): ${type.name},\n\n                      Delete(\n                          ${type.name}:input_${type.name}\n                      ): ${type.name}\n                  }`)}\n              \n\n              ${data.Types.map(propContaining=>`\\n# ${propContaining.description}\\n input input_${spaceToSnake(propContaining.name)} {\n                ${propContaining.Props.map(prop=>`\\n# ${prop.description} \\n ${spaceToSnake(prop.name)}: ${decorate_input(prop)}`).join(\" \")}\n              }`).join(\" \")}\n            `\n\n            res(buildSchema((queries + mutations)))\n        })\n\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}