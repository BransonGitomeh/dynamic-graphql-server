{"version":3,"sources":["webpack:///webpack/bootstrap 6fe1e589fdbbdaf26194","webpack:///external \"mongodb\"","webpack:///./src/index.js","webpack:///external \"express\"","webpack:///external \"express-graphql\"","webpack:///external \"graphql\"","webpack:///external \"request\""],"names":["express","require","app","graphqlHTTP","graphql","buildSchema","MongoClient","ObjectId","url","prodUrl","request","process","env","NODE_ENV","connect","err","db","console","log","schema","types","rootValue","hello","Type","_id","Promise","res","rej","col","collection","findOne","data","Props","find","Parent","toArray","Types","forEach","item","Project","Projects","addProject","args","insertOne","addType","addProp","use","static","graphiql","req","next","makeSchema","params","project_id","then","middleware","port","PORT","listen","decorate","prop","finalRes","spaceToSnake","list","required","decorate_input","basicTypes","indexOf","string","replace","checkIfPropRequireList","name","post","form","query","variables","JSON","stringify","project","result","body","parse","queries","map","type","description","toString","join","propContaining","mutations"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fe1e589fdbbdaf26194","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 0\n// module chunks = 0","const express = require('express');\nconst app = new express();\nconst graphqlHTTP = require('express-graphql');\nlet { graphql, buildSchema } = require('graphql');\nlet MongoClient = require('mongodb').MongoClient\nlet ObjectId = require('mongodb').ObjectId\nlet url = 'mongodb://localhost:27017/coola';\nlet prodUrl = 'mongodb://branson:a323573770@ds141082.mlab.com:41082/coola'\nconst request = require('request')\n\nif (process.env.NODE_ENV == 'production') {\n    url = prodUrl\n}\n\nMongoClient.connect(url, function (err, db) {\n    if (err) {\n        console.log(err)\n        console.log(\"could not connet to the database\")\n    } else {\n        console.log(\"database connected succesfully\")\n    }\n    var schema = buildSchema(`\n          type Query {\n            hello: String,\n            Type(_id: String):Type,\n            Types:[Type],\n            Prop:Prop,\n            Props:[Prop],\n            Project(_id: String):Project,\n            Projects:[Project],\n            Relationship:Relationship,\n            Relationships:[Relationship]\n          }\n\n          type Mutation {\n           addType(\n            name: String,\n            Project:String!,\n            description:String,\n           ): String,\n\n           removeType(\n            _id: String,\n           ): String,\n\n           addProject(\n              name: String,\n              description: String,\n           ):String\n\n           removeProject(\n            _id: String,\n           ): String,\n\n           addProp(\n             name: String,\n             list: Boolean,\n             Parent:String,\n             Type:String,\n             required:Boolean,\n             description:String,\n           ): String,\n\n           removeProp(\n            _id: String,\n           ): String,\n          }\n\n          type Project {\n            _id: String,\n            name: String,\n            Types:[Type]\n          }\n\n          type Type {\n            _id: String,\n            name: String,\n            description : String,\n            Props:[Prop]\n          }\n\n          type Prop {\n            _id: String,\n            Parent:Type,\n            list: Boolean,\n            required:Boolean,\n            description:String,\n            name: String,\n            Type:String\n          }\n\n          type Relationship {\n            _id: String,\n            origin: Type,\n            target: Type,\n          }\n        `);\n\n    const types = []\n\n    var rootValue = {\n        hello: () => 'Hello world!',\n        Type: ({ _id }) => new Promise((res, rej) => {\n            const col = db.collection(\"Types\")\n            console.log(_id)\n            col.findOne({ _id: new ObjectId(_id) }, (err, data) => {\n                !data ? \"\" : data.Props = () => new Promise((res, rej) => {\n                    const col = db.collection(\"Props\")\n                    col.find({ Parent: new ObjectId(data._id) }).toArray((err, data) => {\n                        res(data)\n                    })\n                })\n                console.log(data)\n                res(data)\n            })\n        }),\n        Types: () => new Promise((res, rej) => {\n            const col = db.collection(\"Types\")\n            col.find().toArray((err, data) => {\n                data.forEach(item => {\n                    item.Props = () => new Promise((res, rej) => {\n                        const col = db.collection(\"Props\")\n                        col.find({ Parent: new ObjectId(item._id) }).toArray((err, data) => {\n                            res(data)\n                        })\n                    })\n                })\n                res(data)\n            })\n        }),\n        Project: ({ _id }) => new Promise((res, rej) => {\n            const col = db.collection(\"Projects\")\n            console.log(_id)\n            col.findOne({ _id: new ObjectId(_id) }, (err, data) => {\n                !data ? \"\" : data.Types = () => new Promise((res, rej) => {\n                    const col = db.collection(\"Types\")\n                    col.find({ Project: new ObjectId(data._id) }).toArray((err, data) => {\n                        data.forEach(item => {\n                            item.Props = () => new Promise((res, rej) => {\n                                const col = db.collection(\"Props\")\n                                col.find({ Parent: new ObjectId(item._id) }).toArray((err, data) => {\n                                    res(data)\n                                })\n                            })\n                        })\n                        res(data)\n                    })\n                })\n                console.log(data)\n                res(data)\n            })\n        }),\n        Projects: () => new Promise((res, rej) => {\n            const col = db.collection(\"Projects\")\n            col.find().toArray((err, data) => {\n                data.forEach(item => {\n                    item.Props = () => new Promise((res, rej) => {\n                        const col = db.collection(\"Props\")\n                        col.find().toArray((err, data) => {\n                            res(data)\n                        })\n                    })\n                })\n                res(data)\n            })\n        }),\n        addProject: (args) => new Promise((res, rej) => {\n            const col = db.collection(\"Projects\")\n            col.insertOne(args, (err, data) => {\n                res(data)\n            })\n        }),\n        addType: (args) => new Promise((res, rej) => {\n            const col = db.collection(\"Types\")\n            args.Project = new ObjectId(args.Project)\n            col.insertOne(args, (err, data) => {\n                res(data)\n            })\n        }),\n        addProp: (args) => new Promise((res, rej) => {\n            const col = db.collection(\"Props\")\n            args.Parent = new ObjectId(args.Parent)\n            col.insertOne(args, (err, data) => {\n                res(data)\n            })\n        }),\n    };\n\n    app.use(express.static('./www'));\n\n    app.use('/graphql', graphqlHTTP({\n        schema,\n        rootValue,\n        graphiql: true\n    }));\n\n    app.use('/graphql2/:project_id', (req, res, next) => {\n        makeSchema(req.params.project_id).then(schema => {\n            req.schema = schema\n            next()\n        })\n    }, (req, res, next) => {\n        const middleware = graphqlHTTP({\n            schema: req.schema,\n            rootValue,\n            graphiql: true\n        })\n\n        middleware(req, res, next)\n    });\n\n    const port = process.env.PORT || 3000\n\n    app.listen(port, () => console.log(`Started listening at ${port}`, url));\n});\n\nfunction decorate(prop) {\n    let finalRes = spaceToSnake(prop.Type)\n\n    if (prop.Type)\n\n        if (prop.list == true) {\n            finalRes = `[${finalRes}]`\n        }\n\n    if (prop.required == true) {\n        finalRes = `${finalRes}!`\n    }\n\n    return finalRes\n}\n\nfunction decorate_input(prop) {\n    const basicTypes = ['Int', 'String', 'Boolean', 'Float']\n\n    let finalRes = spaceToSnake(prop.Type)\n\n    if (basicTypes.indexOf(finalRes) == -1) {\n        finalRes = \"input_\" + spaceToSnake(prop.Type)\n    }\n\n    if (prop.list == true) {\n        finalRes = `[${finalRes}]`\n    }\n\n    if (prop.required == true) {\n        finalRes = `${finalRes}!`\n    }\n\n    return finalRes\n}\n\nfunction spaceToSnake(string) {\n    return string.replace(/ /g, \"_\")\n}\n\nfunction checkIfPropRequireList(prop) {\n    let finalRes = spaceToSnake(prop.name)\n\n    if (prop.list == true) {\n        finalRes = `${finalRes}(first:Int,after:String,offSet:Int)`\n    }\n\n    return finalRes\n}\n\nfunction makeSchema(project_id) {\n    return new Promise((res, rej) => {\n                let url = 'http://localhost:3000/graphql'\n                if (process.env.NODE_ENV == 'production') {\n                    url = \"https://guarded-spire-97737.herokuapp.com/graphql\"\n                }\n                request.post({\n                            url,\n                            form: {\n                                query: `query te($project:String){\n                                    Project(_id:$project){\n                                      Types {\n                                        _id\n                                        name,\n                                        description,\n                                        Props{\n                                          _id,\n                                          name,\n                                          required,\n                                          description,\n                                          list,\n                                          Type\n                                        }\n                                      }\n                                    }\n                                  }`,\n                                variables: JSON.stringify({\n                                    project: project_id\n                                })\n                            }\n                        }, (err, result) => {\n                            console.log(err || result.body)\n                            const data = JSON.parse(result.body).data.Project\n\n                            console.log(data)\n                            const queries = `\n                            type Query {\n                              ${data.Types.map(type=>`\\n# ${type.description} \\n \n                                ${spaceToSnake(type.name.toString())}(_id:String) : ${spaceToSnake(type.name.toString())}`)\n                              .join(\" \")}\n                              \n                              ${data.Types.map(type=>`\\n# list of ${type.description} \\n \n                                ${spaceToSnake(type.name.toString())}s : [${spaceToSnake(type.name.toString())}]`)\n                              .join(\" \")}\n                            }\n\n                            ${data.Types.map(propContaining=>`\\n# ${propContaining.description}\\n type ${spaceToSnake(propContaining.name)} {\n                              ${propContaining.Props.map(prop=>`\\n# ${prop.description} \\n \n                                ${checkIfPropRequireList(prop)}: ${decorate(prop)}`)\n                              .join(\" \")}\n                            }`).join(\" \")}\n            `\n            const mutations = `\n              type Mutation {\n                ${data.Types.map(type=>`\\n# ${type.description} \\n\n                  ${spaceToSnake(type.name.toString())}Mutations : ${spaceToSnake(type.name.toString())}Mutations`)\n                .join(\" \")}\n              }\n\n              ${data.Types.map(type=>`type ${spaceToSnake(type.name)}Mutations {\n                      Create(\n                          ${spaceToSnake(type.name)}:input_${spaceToSnake(type.name)}\n                      ): ${spaceToSnake(type.name)},\n\n                      Update(\n                          ${spaceToSnake(type.name)}:input_${spaceToSnake(type.name)}\n                      ): ${spaceToSnake(type.name)},\n\n                      Delete(\n                          ${spaceToSnake(type.name)}:input_${spaceToSnake(type.name)}\n                      ): ${spaceToSnake(type.name)}\n                  }`)}\n              \n\n              ${data.Types.map(propContaining=>`\\n# ${propContaining.description}\\n input input_${spaceToSnake(propContaining.name)} {\n                ${propContaining.Props.map(prop=>`\\n# ${prop.description} \\n ${spaceToSnake(prop.name)}: ${decorate_input(prop)}`).join(\" \")}\n              }`).join(\" \")}\n            `\n\n            res(buildSchema((queries + mutations)))\n        })\n\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}